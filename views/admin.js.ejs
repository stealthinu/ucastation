// WebSocketでの通信部分
var port = '<%= port %>';
var password = 'pass';

var socket = io.connect( "/admin", { port: port } );

socket.emit( 'admin login', password, function( reply ) {
  console.log( "admin login reply:" + reply );
  if ( reply == "OK admin login" ) {
    $("#condition").html( "<div class='alert-message success'>管理者認証成功</div>" );
  }
});


socket.on( 'connect', function() {
  console.log( "connect." );
});

socket.on( 'disconnect', function() {
  console.log( "disconnect." );
  $("#condition").html( "<div class='alert-message error'>切断</div>" );
});

//socket.on( 'channel', function( ch ) {});

socket.on( 'board', function( text ) {
  $("#board").html( text );
});

socket.on( 'viewnum', function( num ) {
  $("#view_num").html( "<div class='alert-message info'>接続数：" + num + "</div>" );
});

function sendChannel( channel ) {
  $("#condition").html( "<div class='alert-message info'>チャンネル送信中...</div>" );
  socket.emit( 'admin channel', channel, function( reply ) {
    console.log( "admin channel reply:" + reply );
    if ( reply == "OK admin channel" ) {
      $("#condition").html( "<div class='alert-message success'>チャンネル送信成功</div>" );
    }
  });
}

function sendBoard( text ) {
  text = text.replace(/(\r\n|\n|\r)/g, '<br>'); // 改行を<br>に置き換え

  $("#condition").html( "<div class='alert-message info'>告知送信中...</div>" );
  socket.emit( 'admin board', text, function( reply ) {
    console.log( "admin board reply:" + reply );
    if ( reply == "OK admin board" ) {
      $("#condition").html( "<div class='alert-message success'>告知送信成功</div>" );
    }
  });
}
